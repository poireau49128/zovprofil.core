@model List<Product>
<link rel="stylesheet" href="~/css/production.css" />

<div class="container">
    <nav>
        @await Component.InvokeAsync("FlexMenu")
    </nav>
    <div class="content">
        @foreach (var product in Model)
        {
            if (ViewBag.Operation == "UniqueCategories")
            {
                <a asp-action="Production" asp-route-category=@product.Category asp-route-productType=@product.ProductType asp-route-isBasic=true class="block">
                    <div class="block-img">
                        <img src="https://zovprofil.by/Images/ClientsCatalogImages/Thumbs//@product.FileName" alt="">
                    </div>
                    <p>@product.Category</p>
                </a>
            }
            else if (ViewBag.Operation == "BasicProducts")
            {
                <a asp-action="ProductDetails" asp-route-imageId=@product.ImageId class="block">
                    <div class="block-img">
                        <img src="https://zovprofil.by/Images/ClientsCatalogImages/Thumbs//@product.FileName" alt="">
                    </div>
                    <p>@Html.Raw(product.Name)<br />@product.Color</p>
                </a>
            }
            else if (ViewBag.Operation == "GroupedProducts")
            {
                <a asp-action="Production" asp-route-category=@product.Category asp-route-productType=@product.ProductType asp-route-isBasic=false asp-route-name=@product.Name.Split(' ')[0] class="block">
                    <div class="block-img">
                        <img src="https://zovprofil.by/Images/ClientsCatalogImages/Thumbs//@product.FileName" alt="">
                    </div>
                    <p>@product.Name.Split(' ')[0]</p>
                </a>
            }
            
        }
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        function adjustCard(card) {
            const img = card.querySelector('img');
            const text = card.querySelector('p');
            const maxCardHeight = 310;
            const initialCardHeight = 275;
            const initialFontSize = 18;

            let cardHeight = initialCardHeight;
            let fontSize = initialFontSize;
            let isAdjusted = false;

            const imgHeight = img.clientHeight;
            const textHeight = text.scrollHeight;
            const availableHeight = card.clientHeight - imgHeight;

            while (textHeight > availableHeight && fontSize > 14) {
                fontSize -= 1;
                text.style.fontSize = fontSize + 'px';
                isAdjusted = true;
            }

            while (textHeight > availableHeight && cardHeight < maxCardHeight) {
                cardHeight += 5;
                card.style.height = cardHeight + 'px';
                isAdjusted = true;
            }

            if (!isAdjusted) {
                text.style.fontSize = initialFontSize + 'px';
                card.style.height = initialCardHeight + 'px';
            }
        }

        const cards = document.querySelectorAll('.block');
        cards.forEach(card => adjustCard(card));
    });
</script>
