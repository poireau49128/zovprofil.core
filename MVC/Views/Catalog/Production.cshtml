@model List<Product>
@using Ganss.Xss
@using MVC.Helpers
@{
    var sanitizer = new HtmlSanitizer();
    sanitizer.AllowedTags.Add("br");
    ViewBag.Title = "Каталог";

}
<link rel="stylesheet" href="~/css/production.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />

<div class="container">
    <nav>
        @await Component.InvokeAsync("FlexMenu")
    </nav>
    <div class="catslider">
        
    </div>
    <div class="content" id="content">
        @{
            var CatSlider = ViewBag.CatSlider;
        }
        @if (CatSlider != null)
        {
            <div class="categoryInfo" style="width: 100%;">
                <div class="swiper swiper-main" rewind="true">
                    <div class="swiper-wrapper">
                        @foreach (var fileName in CatSlider.Item2)
                        {
                            <div class="swiper-slide" style="height: 90%;">
                                <img style="width: 100%; height: 100%; object-fit: cover;" src="https://zovprofil.by/Images/ClientsCatalogImages/@fileName" alt="Alternate Text" />
                            </div>
                        }
                    </div>
                    <div class="swiper-scrollbar"></div>
                </div>
                <p>@Html.Raw(sanitizer.Sanitize(@CatSlider.Item1))</p>
            </div>
        }

        @foreach (var product in Model)
        {
            if (ViewBag.Operation == "UniqueCategories")
            {
                <a asp-action="Production" asp-route-categoryTranslit=@TransliterationHelper.ToLatin(product.Category) asp-route-productTypeTranslit=@TransliterationHelper.ProdutTypeIntToString(product.ProductType) asp-route-isBasic=@true class="block">
                    <div class="block-img">
                        <img src="https://zovprofil.by/Images/ClientsCatalogImages/Thumbs//@product.FileName" alt="">
                    </div>
                    <p>@product.Category</p>
                </a>
            }
            else if (ViewBag.Operation == "BasicProducts")
            {
                <a asp-action="ProductDetails" asp-route-imageId=@product.ImageId class="block">
                    <div class="block-img">
                        <img src="https://zovprofil.by/Images/ClientsCatalogImages/Thumbs//@product.FileName" alt="">
                    </div>
                    <p>@Html.Raw(sanitizer.Sanitize(product.Name))<br />@product.Color</p>
                </a>
            }
            else if (ViewBag.Operation == "GroupedProducts")
            {
                <a asp-action="Production"
                   asp-route-categoryTranslit="@TransliterationHelper.ToLatin(product.Category)"
                   asp-route-productTypeTranslit=@TransliterationHelper.ProdutTypeIntToString(product.ProductType)
                   asp-route-nameTranslit="@TransliterationHelper.ToLatin(product.Name.Split(' ')[0])"
                   asp-route-isBasic=@false
                   class="block">
                    <div class="block-img">
                        <img src="https://zovprofil.by/Images/ClientsCatalogImages/Thumbs/@product.FileName" alt="">
                    </div>
                    @if (product.Category == "Столы")
                    {
                        <p>@Html.Raw(sanitizer.Sanitize(product.Name))</p>
                    }
                    else
                    {
                        <p>@product.Name.Split(' ')[0]</p>
                    }
                </a>
            }
            
        }
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script src="~/js/swiper.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        function setMaxHeightInContainer(containerSelector) {
            const container = document.querySelector(containerSelector);
            if (!container) return;

            const blocks = container.querySelectorAll('.block');
            let maxHeight = 0;

            blocks.forEach(function (block) {
                
                const blockHeight = block.offsetHeight;
                if (blockHeight > maxHeight) {
                    maxHeight = blockHeight;
                }
            });
            blocks.forEach(function (block) {
                block.style.height = maxHeight + 'px';
            });
        }
        setMaxHeightInContainer('#content');
    });
</script>